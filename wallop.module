<?php
/**
 * Implements hook_theme().
 * Animations can be implemented by adding the animation name, and a
 * cooresponding CSS file.
 */
function wallop_theme() {
  return array(
    'wallop_slideshow' => array(
      'template' => 'templates/wallop-slideshow',
      'variables' => array(
        'slideshow_id' => NULL,
        'header' => NULL,
        // An array of items - each of which will be a string or render array
        'slides' => array(),
        // Run through drupal_attributes().
        'attributes_array' => array(
          'class' => array(
            'Wallop',
            'Wallop--fade',
          ),
        ),
        // Settings coorespond directly to the Wallop library
        'settings' => array(
          'buttonNextClass' => 'Wallop-buttonNext',
          'buttonPreviousClass' => 'Wallop-buttonPrevious',
          'itemClass' => 'Wallop-item',
          'currentItemClass' => 'Wallop-item--current',
          'showPreviousClass' => 'Wallop-item--showPrevious',
          'showNextClass' => 'Wallop-item--showNext',
          'hidePreviousClass' => 'Wallop-item--hidePrevious',
          'hideNextClass' => 'Wallop-item--hideNext',
          'carousel' => TRUE,
          'shouldAutoPlay' => true,
          'autoPlayMs' => 4500,
        ),
        'show_controls' => TRUE,
        'animation' => 'fade',
      ),
    ),
  );
}

/**
 * Implements hook_preprocess_HOOK().
 * @param $variables
 */
function wallop_preprocess_wallop_slideshow(&$variables) {
  if(empty($variables['slideshow_id'])) {
    $drupal_id = drupal_html_id('wallop-slideshow');
    $variables['slideshow_id'] = $drupal_id;
  }
  $instances = [
    'instances' => [
      $variables['slideshow_id'] => [
        'settings' => $variables['settings']
      ]
    ]
  ];
  wallop_add_core_assets();
  drupal_add_js(['wallop' => $instances], 'setting');
  drupal_add_css(drupal_get_path('module', 'wallop') . '/css/wallop--' . $variables['animation'] . '.css');
}

/**
 * Implement a static cache to determine if the script has been added.
 * This is necessary b/c we are going to inline the main library script.
 * By default, Drupal does no deduplication of inline script inclusion.
 */
function wallop_add_core_assets() {
  $added =& drupal_static(__FUNCTION__, FALSE);

  if($added) {
    return;
  }

  $base_path = drupal_get_path('module', 'wallop');
  drupal_add_js($base_path . '/js/vendor/wallop.min.js');
  drupal_add_js($base_path . '/js/wallop.js');
  drupal_add_css($base_path . '/css/wallop.css');

  $added = TRUE;
}

